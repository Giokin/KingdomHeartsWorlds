{"ast":null,"code":"var _jsxFileName = \"/home/giokin/startEnviornmentPatch/start-enviornment/src/components/worlds.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWorlds, selectWorld } from \"../reducers/world\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Worlds = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const worlds = useSelector(selectWorld);\n  useEffect(() => {\n    dispatch(fetchWorlds());\n    console.log('Fetched Worlds from Database');\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: worlds.map(world => {\n      return /*#__PURE__*/_jsxDEV(\"il\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: world.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, world.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Worlds, \"e76kjNjxXGaP8dC790tg/43TZKc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Worlds;\nexport default Worlds;\n\nvar _c;\n\n$RefreshReg$(_c, \"Worlds\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchWorlds","selectWorld","Worlds","dispatch","worlds","console","log","map","world","name","id"],"sources":["/home/giokin/startEnviornmentPatch/start-enviornment/src/components/worlds.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWorlds, selectWorld } from \"../reducers/world\";\n\nconst Worlds = () =>{\n    const dispatch = useDispatch();\n    const worlds = useSelector(selectWorld)\n\n    useEffect(() =>{\n        dispatch(fetchWorlds());\n        console.log('Fetched Worlds from Database')\n    },[dispatch]);\n\n    return(\n        <ul>\n            {worlds.map((world)=>{\n                return (\n                    <il key={world.id}>\n                        <h2>{world.name}</h2>\n                    </il>\n                );\n            })}\n        </ul>\n    );\n};\n\nexport default Worlds;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;;;AAEA,MAAMC,MAAM,GAAG,MAAK;EAAA;;EAChB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAMK,MAAM,GAAGN,WAAW,CAACG,WAAD,CAA1B;EAEAJ,SAAS,CAAC,MAAK;IACXM,QAAQ,CAACH,WAAW,EAAZ,CAAR;IACAK,OAAO,CAACC,GAAR,CAAY,8BAAZ;EACH,CAHQ,EAGP,CAACH,QAAD,CAHO,CAAT;EAKA,oBACI;IAAA,UACKC,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAS;MACjB,oBACI;QAAA,uBACI;UAAA,UAAKA,KAAK,CAACC;QAAX;UAAA;UAAA;UAAA;QAAA;MADJ,GAASD,KAAK,CAACE,EAAf;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CANA;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CApBD;;GAAMR,M;UACeH,W,EACFD,W;;;KAFbI,M;AAsBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}